local ESX = exports['es_extended']:getSharedObject()

MySQL.ready(function()
    MySQL.query("CREATE TABLE IF NOT EXISTS votes (identifier VARCHAR(50) UNIQUE, candidate VARCHAR(50))")
end)

-- Ki·ªÉm tra ng∆∞·ªùi ch∆°i c√≥ quy·ªÅn admin kh√¥ng
function isAdmin(xPlayer)
    local playerGroup = xPlayer.getGroup()
    return playerGroup == "admin" or playerGroup == "superadmin"
end

-- Ki·ªÉm tra ng∆∞·ªùi ch∆°i ƒë√£ b·ªè phi·∫øu ch∆∞a
ESX.RegisterServerCallback("vote:canVote", function(source, cb)
    local xPlayer = ESX.GetPlayerFromId(source)
    if not xPlayer then
        cb(false)
        return
    end

    local identifier = xPlayer.identifier
    if not identifier then
        cb(false)
        return
    end

    MySQL.scalar("SELECT candidate FROM votes WHERE identifier = ?", {identifier}, function(result)
        cb(result == nil)
    end)
end)

-- Ghi nh·∫≠n phi·∫øu b·∫ßu c·ªßa ng∆∞·ªùi ch∆°i
RegisterNetEvent("vote:castVote")
AddEventHandler("vote:castVote", function(candidate)
    local _source = source
    if not _source then
        return
    end

    local xPlayer = ESX.GetPlayerFromId(_source)
    if not xPlayer then
        return
    end

    local identifier = xPlayer.identifier
    if not identifier then
        return
    end

    MySQL.scalar("SELECT candidate FROM votes WHERE identifier = ?", {identifier}, function(result)
        if not result then
            MySQL.insert("INSERT INTO votes (identifier, candidate) VALUES (?, ?)", {identifier, candidate})
            TriggerClientEvent("esx:showNotification", _source, "~y~PHI·∫æU B·∫¶U ƒê∆Ø·ª¢C G·ª¨I CHO " .. candidate .. "!")
        else
            TriggerClientEvent("esx:showNotification", _source, "~y~B·∫†N ƒê√É B√åNH CH·ªåN!")
        end
    end)
end)

-- Hi·ªÉn th·ªã k·∫øt qu·∫£ b√¨nh ch·ªçn trong game & g·ª≠i l√™n Discord
RegisterNetEvent("vote:showResults")
AddEventHandler("vote:showResults", function(isFinal, targetPlayer)
    local target = targetPlayer or -1

    MySQL.query("SELECT candidate, COUNT(*) as votes FROM votes GROUP BY candidate ORDER BY votes DESC", {}, function(results)
        local message = "**üìä T·∫°m Ki·ªÉm ƒê·∫øm üìä**\n\n"
        local highestVotes = 0
        local winner = nil
        local isTie = false

        if #results == 0 then
            message = message .. "Ch∆∞a c√≥ phi·∫øu b·∫ßu n√†o ƒë∆∞·ª£c b√¨nh ch·ªçn!"
        else
            for _, result in ipairs(results) do
                message = message .. string.format("‚úÖ **%s**: %d phi·∫øu\n", result.candidate, result.votes)

                if result.votes > highestVotes then
                    highestVotes = result.votes
                    winner = result.candidate
                    isTie = false
                elseif result.votes == highestVotes then
                    isTie = true
                end
            end
        end

        -- N·∫øu ƒë∆∞·ª£c g·ªçi t·ª´ ƒëi·ªÉm c·ªë ƒë·ªãnh, ch·ªâ g·ª≠i k·∫øt qu·∫£ cho ng∆∞·ªùi ch∆°i ƒë√≥
        if not isFinal then
            TriggerClientEvent("vote:displayResults", target, message)
        end

        -- N·∫øu l√† k·∫øt qu·∫£ cu·ªëi c√πng ho·∫∑c t·ª´ showvote, g·ª≠i l√™n Discord
        local webhookTitle = isFinal and "üèÜ B·ªè phi·∫øu ƒë√£ k·∫øt th√∫c!" or "üìä K·∫øt qu·∫£ b·ªè phi·∫øu hi·ªán t·∫°i"
        local webhookColor = isFinal and 16776960 or 3447003 -- V√†ng n·∫øu l√† k·∫øt qu·∫£ cu·ªëi c√πng, Xanh n·∫øu ch·ªâ l√† c·∫≠p nh·∫≠t

        local discordMessage = {
            username = "H·ªÜ TH·ªêNG B√åNH CH·ªåN",
            embeds = {{
                title = webhookTitle,
                description = message,
                color = webhookColor,
                footer = { text = isFinal and "ƒê√¢y l√† k·∫øt qu·∫£ cu·ªëi c√πng." or "ƒê√¢y l√† b·∫£n c·∫≠p nh·∫≠t k·∫øt qu·∫£ t·∫°m th·ªùi." }
            }}
        }

        if isFinal and not isTie and winner then
            for _, candidate in ipairs(Config.Candidates) do
                if candidate.name == winner then
                    discordMessage.embeds[1].image = { url = candidate.image }
                    break
                end
            end
        end

        local jsonData = json.encode(discordMessage)
        print("^3[DEBUG] JSON sent to Discord: " .. jsonData) -- Ki·ªÉm tra d·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i

        PerformHttpRequest(Config.DiscordWebhook, function(err, text, headers)
            if err ~= 200 then
                print("^1[ERROR] Failed to send results to Discord! Error code: " .. tostring(err))
            else
                print("^2[INFO] Voting results successfully sent to Discord!")
            end
        end, 'POST', json.encode(discordMessage), { ['Content-Type'] = 'application/json' })

        -- N·∫øu l√† k·∫øt qu·∫£ cu·ªëi c√πng, hi·ªÉn th·ªã cho t·∫•t c·∫£ ng∆∞·ªùi ch∆°i
        if isFinal then
            print("^3[DEBUG] Sending voting results to clients: " .. message)
            TriggerClientEvent("vote:displayResults", -1, message)
        end
    end)
end)

-- L·ªánh admin: Hi·ªÉn th·ªã k·∫øt qu·∫£ v√† g·ª≠i l√™n Discord
RegisterCommand("showvote", function(source, args)
    local xPlayer = ESX.GetPlayerFromId(source)
    if not isAdmin(xPlayer) then
        TriggerClientEvent("esx:showNotification", source, "~y~B·∫†N KH√îNG C√ì QUY·ªÄN!")
        return
    end
    TriggerEvent("vote:showResults", false) -- G·ª≠i l√™n Discord lu√¥n
end, false)

-- L·ªánh admin: K·∫øt th√∫c cu·ªôc b√¨nh ch·ªçn v√† g·ª≠i k·∫øt qu·∫£ cu·ªëi c√πng
RegisterCommand("endvote", function(source, args)
    local xPlayer = ESX.GetPlayerFromId(source)
    if not isAdmin(xPlayer) then
        TriggerClientEvent("esx:showNotification", source, "~y~B·∫†N KH√îNG C√ì QUY·ªÄN!")
        return
    end
    TriggerEvent("vote:showResults", true)
end, false)

-- Reset b√¨nh ch·ªçn
RegisterNetEvent("vote:resetVoting")
AddEventHandler("vote:resetVoting", function()
    local xPlayer = ESX.GetPlayerFromId(source)
    if not isAdmin(xPlayer) then
        TriggerClientEvent("esx:showNotification", source, "~y~B·∫†N KH√îNG C√ì QUY·ªÄN!")
        return
    end

    MySQL.query("DELETE FROM votes", {}, function(rowsChanged)
        TriggerClientEvent("esx:showNotification", -1, "~y~B√ÇY GI·ªú B·∫†N C√ì TH·ªÇ B·ªé PHI·∫æU L·∫†I.")
    end)
end)

-- L·ªánh admin: Reset b√¨nh ch·ªçn
RegisterCommand("resetvote", function(source, args)
    local xPlayer = ESX.GetPlayerFromId(source)
    if not isAdmin(xPlayer) then
        TriggerClientEvent("esx:showNotification", source, "~y~B·∫†N KH√îNG C√ì QUY·ªÄN!")
        return
    end
    TriggerEvent("vote:resetVoting")
end, false)

-- Xem k·∫øt qu·∫£ t·∫°i ƒëi·ªÉm c·ªë ƒë·ªãnh
RegisterNetEvent("vote:checkResultsAtLocation")
AddEventHandler("vote:checkResultsAtLocation", function()
    local _source = source
    TriggerEvent("vote:showResults", false, _source)
end)
